(** * DSL benchmark: Hydra-S1 ZKPS *)

Require Import Coq.Lists.List.
Require Import Coq.micromega.Lia.
Require Import Coq.Init.Peano.
Require Import Coq.Arith.PeanoNat.
Require Import Coq.Arith.Compare_dec.
Require Import Coq.PArith.BinPosDef.
Require Import Coq.ZArith.BinInt Coq.ZArith.ZArith Coq.ZArith.Zdiv Coq.ZArith.Znumtheory Coq.NArith.NArith. (* import Zdiv before Znumtheory *)
Require Import Coq.NArith.Nnat.

Require Import Crypto.Spec.ModularArithmetic.
Require Import Crypto.Arithmetic.PrimeFieldTheorems Crypto.Algebra.Field.
Require Import Crypto.Util.Decidable. (* Crypto.Util.Notations. *)
Require Import Coq.setoid_ring.Ring_theory Coq.setoid_ring.Field_theory Coq.setoid_ring.Field_tac.

From Circom Require Import Circom Util Default Tuple ListUtil LibTactics Simplify Repr Coda.

Local Coercion N.of_nat : nat >-> N.
Local Coercion Z.of_nat : nat >-> Z.

Local Open Scope list_scope.
Local Open Scope F_scope.
Local Open Scope Z_scope.
Local Open Scope circom_scope.
Local Open Scope tuple_scope.

Definition Poseidon (nInputs : nat) (inputs : list F) : F := 0.

(** ** PositionSwitcher *)

(* print_endline (generate_lemmas position_switcher (typecheck_circuit d_empty position_switcher));; *)

Lemma PositionSwitcher_obligation0_trivial: forall (_in : (list F)) (s : F) (v : F), Forall (fun x0 => True) _in -> ((length _in) = 2%nat) -> True -> True -> (((v = s) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation1_trivial: forall (_in : (list F)) (s : F) (v : F), Forall (fun x1 => True) _in -> ((length _in) = 2%nat) -> True -> True -> ((v = 1%F) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation2_trivial: forall (_in : (list F)) (s : F) (v : F), Forall (fun x2 => True) _in -> ((length _in) = 2%nat) -> True -> True -> (((v = s) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation3_trivial: forall (_in : (list F)) (s : F) (v : F), Forall (fun x3 => True) _in -> ((length _in) = 2%nat) -> True -> True -> ((v = (1%F - s)%F) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation4_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (v : F), Forall (fun x4 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> True -> (((v = in1) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation5_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (v : F), Forall (fun x5 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> True -> (((v = in0) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation6_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (v : F), Forall (fun x6 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> True -> ((v = (in1 - in0)%F) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation7_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (v : F), Forall (fun x7 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> True -> (((v = s) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation8_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (v : F), Forall (fun x8 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> True -> ((v = ((in1 - in0)%F * s)%F) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation9_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (v : F), Forall (fun x9 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> True -> (((v = in0) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation10_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (v : F), Forall (fun x10 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> True -> (((v = in0) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation11_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (v : F), Forall (fun x11 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> True -> (((v = in1) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation12_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (v : F), Forall (fun x12 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> True -> ((v = (in0 - in1)%F) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation13_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (v : F), Forall (fun x13 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> True -> (((v = s) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation14_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (v : F), Forall (fun x14 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> True -> ((v = ((in0 - in1)%F * s)%F) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation15_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (v : F), Forall (fun x15 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> True -> (((v = in1) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation16_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (out1 : F) (v : F), Forall (fun x16 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> (out1 = (((in0 - in1)%F * s)%F + in1)%F) -> True -> (((v = out0) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation17_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (out1 : F) (v : F), Forall (fun x17 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> (out1 = (((in0 - in1)%F * s)%F + in1)%F) -> True -> (((v = out1) /\ True) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation18_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (out1 : F) (v : (list F)), Forall (fun x18 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> (out1 = (((in0 - in1)%F * s)%F + in1)%F) -> Forall (fun x19 => True) v -> True -> ((v = nil) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation19_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (out1 : F) (v : F), Forall (fun x20 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> (out1 = (((in0 - in1)%F * s)%F + in1)%F) -> True -> (True -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation20_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (out1 : F) (v : (list F)), Forall (fun x21 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> (out1 = (((in0 - in1)%F * s)%F + in1)%F) -> Forall (fun x22 => True) v -> True -> ((v = (out1 :: nil)) -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation21_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (out1 : F) (v : F), Forall (fun x23 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> (out1 = (((in0 - in1)%F * s)%F + in1)%F) -> True -> (True -> True).
Proof. intuit. Qed.

Lemma PositionSwitcher_obligation22: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (out1 : F) (v : (list F)), Forall (fun x24 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> (out1 = (((in0 - in1)%F * s)%F + in1)%F) -> Forall (fun x25 => True) v -> True -> ((v = (out0 :: (out1 :: nil))) -> ((((s = 0%F) \/ (s = 1%F)) -> (((s = 0%F) \/ (s = 1%F)) /\ (((s = 1%F) -> (((2%nat <= (length _in)) /\ (2%nat <= (length v))) /\ (((v!0%nat) = (_in!1%nat)) /\ ((v!1%nat) = (_in!0%nat))))) /\ ((s = 0%F) -> (((2%nat <= (length _in)) /\ (2%nat <= (length v))) /\ (((v!0%nat) = (_in!0%nat)) /\ ((v!1%nat) = (_in!1%nat)))))))) /\ ((length v) = 2%nat))).
Proof.
  unwrap_C; intuit; subst;
    simpl in *; try lia; try fqsatz;
    destruct _in; simpl; try reflexivity;
    simpl_default; try (simpl in *; lia);
    try fqsatz.
Qed.

Lemma PositionSwitcher_obligation23_trivial: forall (_in : (list F)) (s : F) (_ : unit) (in0 : F) (in1 : F) (out0 : F) (out1 : F) (v : F), Forall (fun x26 => True) _in -> ((length _in) = 2%nat) -> True -> ((s * (1%F - s)%F)%F = 0%F) -> (in0 = (_in!0%nat)) -> (in1 = (_in!1%nat)) -> (out0 = (((in1 - in0)%F * s)%F + in0)%F) -> (out1 = (((in0 - in1)%F * s)%F + in1)%F) -> True -> (True -> True).
Proof. intuit. Qed.

(** ** VerifyMerklePath *)

(* print_endline (generate_lemmas vrfy_mrkl_path (typecheck_circuit (add_to_deltas d_empty [poseidon; position_switcher]) vrfy_mrkl_path));; *)

(* TODO *)

(** ** VerifyHydraCommitment *)

(* print_endline (generate_lemmas vrfy_hydra_commit (typecheck_circuit (add_to_deltas d_empty [poseidon; vrfy_eddsa_poseidon]) vrfy_hydra_commit));; *)

Lemma VerifyHydraCommitment_obligation0: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (v : Z), True -> True -> Forall (fun x0 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x1 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x2 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> True -> ((v = 1%nat) -> (0%nat <= v)).
Proof. lia. Qed.

Lemma VerifyHydraCommitment_obligation1: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (v : (list F)), True -> True -> Forall (fun x3 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x4 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x5 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> Forall (fun x6 => True) v -> True -> (((v = x) /\ True) -> ((length v) = 1%nat)).
Proof.
  intuit; subst; auto.
Qed.

Lemma VerifyHydraCommitment_obligation2: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (commitment : F) (y : (list F)) (v : Z), True -> True -> Forall (fun x7 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x8 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x9 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> (commitment = (Poseidon 1%nat x)) -> Forall (fun x10 => True) y -> (((True /\ ((y!0%nat) = address)) /\ ((y!1%nat) = commitment)) /\ ((length y) = 2%nat)) -> True -> ((v = 2%nat) -> (0%nat <= v)).
Proof. lia. Qed.

Lemma VerifyHydraCommitment_obligation3: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (commitment : F) (y : (list F)) (v : (list F)), True -> True -> Forall (fun x11 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x12 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x13 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> (commitment = (Poseidon 1%nat x)) -> Forall (fun x14 => True) y -> (((True /\ ((y!0%nat) = address)) /\ ((y!1%nat) = commitment)) /\ ((length y) = 2%nat)) -> Forall (fun x15 => True) v -> True -> (((v = y) /\ True) -> ((length v) = 2%nat)).
Proof.
  intuit; subst; auto.
Qed.

Lemma VerifyHydraCommitment_obligation4_trivial: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (commitment : F) (y : (list F)) (message : F) (k0 : F) (k1 : F) (r2 : F) (r0 : F) (r1 : F) (v : F), True -> True -> Forall (fun x16 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x17 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x18 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> (commitment = (Poseidon 1%nat x)) -> Forall (fun x19 => True) y -> (((True /\ ((y!0%nat) = address)) /\ ((y!1%nat) = commitment)) /\ ((length y) = 2%nat)) -> (message = (Poseidon 2%nat y)) -> (k0 = (commitmentMapperPubKey!0%nat)) -> (k1 = (commitmentMapperPubKey!1%nat)) -> (r2 = (commitmentReceipt!2%nat)) -> (r0 = (commitmentReceipt!0%nat)) -> (r1 = (commitmentReceipt!1%nat)) -> True -> ((v = 1%F) -> True).
Proof. intuit. Qed.

Lemma VerifyHydraCommitment_obligation5_trivial: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (commitment : F) (y : (list F)) (message : F) (k0 : F) (k1 : F) (r2 : F) (r0 : F) (r1 : F) (v : F), True -> True -> Forall (fun x20 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x21 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x22 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> (commitment = (Poseidon 1%nat x)) -> Forall (fun x23 => True) y -> (((True /\ ((y!0%nat) = address)) /\ ((y!1%nat) = commitment)) /\ ((length y) = 2%nat)) -> (message = (Poseidon 2%nat y)) -> (k0 = (commitmentMapperPubKey!0%nat)) -> (k1 = (commitmentMapperPubKey!1%nat)) -> (r2 = (commitmentReceipt!2%nat)) -> (r0 = (commitmentReceipt!0%nat)) -> (r1 = (commitmentReceipt!1%nat)) -> True -> (((v = k0) /\ True) -> True).
Proof. intuit. Qed.

Lemma VerifyHydraCommitment_obligation6_trivial: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (commitment : F) (y : (list F)) (message : F) (k0 : F) (k1 : F) (r2 : F) (r0 : F) (r1 : F) (v : F), True -> True -> Forall (fun x24 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x25 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x26 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> (commitment = (Poseidon 1%nat x)) -> Forall (fun x27 => True) y -> (((True /\ ((y!0%nat) = address)) /\ ((y!1%nat) = commitment)) /\ ((length y) = 2%nat)) -> (message = (Poseidon 2%nat y)) -> (k0 = (commitmentMapperPubKey!0%nat)) -> (k1 = (commitmentMapperPubKey!1%nat)) -> (r2 = (commitmentReceipt!2%nat)) -> (r0 = (commitmentReceipt!0%nat)) -> (r1 = (commitmentReceipt!1%nat)) -> True -> (((v = k1) /\ True) -> True).
Proof. intuit. Qed.

Lemma VerifyHydraCommitment_obligation7_trivial: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (commitment : F) (y : (list F)) (message : F) (k0 : F) (k1 : F) (r2 : F) (r0 : F) (r1 : F) (v : F), True -> True -> Forall (fun x28 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x29 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x30 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> (commitment = (Poseidon 1%nat x)) -> Forall (fun x31 => True) y -> (((True /\ ((y!0%nat) = address)) /\ ((y!1%nat) = commitment)) /\ ((length y) = 2%nat)) -> (message = (Poseidon 2%nat y)) -> (k0 = (commitmentMapperPubKey!0%nat)) -> (k1 = (commitmentMapperPubKey!1%nat)) -> (r2 = (commitmentReceipt!2%nat)) -> (r0 = (commitmentReceipt!0%nat)) -> (r1 = (commitmentReceipt!1%nat)) -> True -> (((v = r2) /\ True) -> True).
Proof. intuit. Qed.

Lemma VerifyHydraCommitment_obligation8_trivial: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (commitment : F) (y : (list F)) (message : F) (k0 : F) (k1 : F) (r2 : F) (r0 : F) (r1 : F) (v : F), True -> True -> Forall (fun x32 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x33 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x34 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> (commitment = (Poseidon 1%nat x)) -> Forall (fun x35 => True) y -> (((True /\ ((y!0%nat) = address)) /\ ((y!1%nat) = commitment)) /\ ((length y) = 2%nat)) -> (message = (Poseidon 2%nat y)) -> (k0 = (commitmentMapperPubKey!0%nat)) -> (k1 = (commitmentMapperPubKey!1%nat)) -> (r2 = (commitmentReceipt!2%nat)) -> (r0 = (commitmentReceipt!0%nat)) -> (r1 = (commitmentReceipt!1%nat)) -> True -> (((v = r0) /\ True) -> True).
Proof. intuit. Qed.

Lemma VerifyHydraCommitment_obligation9_trivial: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (commitment : F) (y : (list F)) (message : F) (k0 : F) (k1 : F) (r2 : F) (r0 : F) (r1 : F) (v : F), True -> True -> Forall (fun x36 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x37 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x38 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> (commitment = (Poseidon 1%nat x)) -> Forall (fun x39 => True) y -> (((True /\ ((y!0%nat) = address)) /\ ((y!1%nat) = commitment)) /\ ((length y) = 2%nat)) -> (message = (Poseidon 2%nat y)) -> (k0 = (commitmentMapperPubKey!0%nat)) -> (k1 = (commitmentMapperPubKey!1%nat)) -> (r2 = (commitmentReceipt!2%nat)) -> (r0 = (commitmentReceipt!0%nat)) -> (r1 = (commitmentReceipt!1%nat)) -> True -> (((v = r1) /\ True) -> True).
Proof. intuit. Qed.

Lemma VerifyHydraCommitment_obligation10_trivial: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (commitment : F) (y : (list F)) (message : F) (k0 : F) (k1 : F) (r2 : F) (r0 : F) (r1 : F) (v : F), True -> True -> Forall (fun x40 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x41 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x42 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> (commitment = (Poseidon 1%nat x)) -> Forall (fun x43 => True) y -> (((True /\ ((y!0%nat) = address)) /\ ((y!1%nat) = commitment)) /\ ((length y) = 2%nat)) -> (message = (Poseidon 2%nat y)) -> (k0 = (commitmentMapperPubKey!0%nat)) -> (k1 = (commitmentMapperPubKey!1%nat)) -> (r2 = (commitmentReceipt!2%nat)) -> (r0 = (commitmentReceipt!0%nat)) -> (r1 = (commitmentReceipt!1%nat)) -> True -> (((v = message) /\ True) -> True).
Proof. intuit. Qed.

Lemma VerifyHydraCommitment_obligation11_trivial: forall (address : F) (secret : F) (commitmentMapperPubKey : (list F)) (commitmentReceipt : (list F)) (x : (list F)) (commitment : F) (y : (list F)) (message : F) (k0 : F) (k1 : F) (r2 : F) (r0 : F) (r1 : F) (v : unit), True -> True -> Forall (fun x44 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> Forall (fun x45 => True) commitmentReceipt -> ((length commitmentReceipt) = 3%nat) -> Forall (fun x46 => True) x -> ((True /\ ((x!0%nat) = secret)) /\ ((length x) = 1%nat)) -> (commitment = (Poseidon 1%nat x)) -> Forall (fun x47 => True) y -> (((True /\ ((y!0%nat) = address)) /\ ((y!1%nat) = commitment)) /\ ((length y) = 2%nat)) -> (message = (Poseidon 2%nat y)) -> (k0 = (commitmentMapperPubKey!0%nat)) -> (k1 = (commitmentMapperPubKey!1%nat)) -> (r2 = (commitmentReceipt!2%nat)) -> (r0 = (commitmentReceipt!0%nat)) -> (r1 = (commitmentReceipt!1%nat)) -> True -> (True -> True).
Proof. intuit. Qed.

(** ** hydraS1 *)

(* print_endline (generate_lemmas "hydraS1" (typecheck_circuit (add_to_deltas d_empty [num2bits; leq; poseidon; vrfy_hydra_commit; vrfy_mrkl_path]) hydra_s1));; *)

Lemma hydraS1_obligation0_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x431 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x432 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x433 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x434 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x435 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x436 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x437 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> (((v = sourceIdentifier) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation1_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x438 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x439 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x440 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x441 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x442 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x443 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x444 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> (((v = sourceSecret) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation2: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x445 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x446 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x447 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x448 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x449 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x450 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x451 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x452 => True) v -> True -> (((v = commitmentMapperPubKey) /\ True) -> ((length v) = 2%nat)).
Proof.
  intuit; subst; lia.
Qed.

Lemma hydraS1_obligation3: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x453 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x454 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x455 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x456 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x457 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x458 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x459 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x460 => True) v -> True -> (((v = sourceCommitmentReceipt) /\ True) -> ((length v) = 3%nat)).
Proof.
  intuit; subst; lia.
Qed.

Lemma hydraS1_obligation4_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x461 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x462 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x463 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x464 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x465 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x466 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x467 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> (((v = destinationIdentifier) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation5_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x468 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x469 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x470 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x471 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x472 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x473 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x474 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> (((v = destinationSecret) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation6: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x475 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x476 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x477 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x478 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x479 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x480 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x481 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> Forall (fun x482 => True) v -> True -> (((v = commitmentMapperPubKey) /\ True) -> ((length v) = 2%nat)).
Proof.
  intuit; subst; lia.
Qed.

Lemma hydraS1_obligation7: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x483 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x484 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x485 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x486 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x487 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x488 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x489 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> Forall (fun x490 => True) v -> True -> (((v = destinationCommitmentReceipt) /\ True) -> ((length v) = 3%nat)).
Proof.
  intuit; subst; lia.
Qed.

Lemma hydraS1_obligation8: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (v : Z), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x491 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x492 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x493 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x494 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x495 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x496 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x497 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x498 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> True -> ((v = 2%nat) -> (0%nat <= v)).
Proof. lia. Qed.

Lemma hydraS1_obligation9: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x499 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x500 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x501 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x502 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x503 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x504 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x505 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x506 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> Forall (fun x507 => True) v -> True -> (((v = x) /\ True) -> ((length v) = 2%nat)).
Proof.
  intuit; subst; lia.
Qed.

Lemma hydraS1_obligation10: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (v : Z), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x508 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x509 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x510 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x511 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x512 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x513 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x514 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x515 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> (((v = accountsTreeHeight) /\ True) -> (0%nat < v)).
Proof. lia. Qed.

Lemma hydraS1_obligation11_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x516 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x517 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x518 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x519 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x520 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x521 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x522 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x523 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> (((v = accountLeafConstructor) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation12_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x524 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x525 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x526 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x527 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x528 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x529 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x530 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x531 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> (((v = accountsTreeRoot) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation13: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x532 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x533 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x534 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x535 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x536 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x537 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x538 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x539 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> Forall (fun x540 => True) v -> True -> (((v = accountMerklePathElements) /\ True) -> (Z.of_nat (length v) = accountsTreeHeight)).
Proof.
  intuit; subst; auto.
Qed.

Lemma hydraS1_obligation14: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x541 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x542 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x543 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x544 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x545 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x546 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x547 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x548 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> Forall (fun x549 => True) v -> True -> (((v = accountMerklePathIndices) /\ True) -> (Z.of_nat (length v) = accountsTreeHeight)).
Proof.
  intuit; subst; auto.
Qed.

Lemma hydraS1_obligation15: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (v : Z), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x550 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x551 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x552 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x553 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x554 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x555 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x556 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x557 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x558 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> True -> ((v = 2%nat) -> (0%nat <= v)).
Proof. lia. Qed.

Lemma hydraS1_obligation16: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x559 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x560 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x561 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x562 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x563 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x564 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x565 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x566 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x567 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> Forall (fun x568 => True) v -> True -> (((v = y) /\ True) -> ((length v) = 2%nat)).
Proof.
  intuit; subst; lia.
Qed.

Lemma hydraS1_obligation17: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (v : Z), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x569 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x570 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x571 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x572 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x573 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x574 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x575 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x576 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x577 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> (((v = registryTreeHeight) /\ True) -> (0%nat < v)).
Proof. lia. Qed.

Lemma hydraS1_obligation18_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x578 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x579 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x580 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x581 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x582 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x583 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x584 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x585 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x586 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> (((v = registryLeafConstructor) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation19_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x587 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x588 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x589 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x590 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x591 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x592 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x593 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x594 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x595 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> (((v = registryTreeRoot) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation20: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x596 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x597 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x598 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x599 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x600 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x601 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x602 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x603 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x604 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> Forall (fun x605 => True) v -> True -> (((v = registryMerklePathElements) /\ True) -> (Z.of_nat (length v) = registryTreeHeight)).
Proof.
  intuit; subst; auto.
Qed.

Lemma hydraS1_obligation21: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x606 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x607 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x608 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x609 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x610 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x611 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x612 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x613 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x614 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> Forall (fun x615 => True) v -> True -> (((v = registryMerklePathIndices) /\ True) -> (Z.of_nat (length v) = registryTreeHeight)).
Proof.
  intuit; subst; lia.
Qed.

Lemma hydraS1_obligation22: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (v : Z), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x616 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x617 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x618 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x619 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x620 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x621 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x622 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x623 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x624 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> True -> ((v = 252%nat) -> (0%nat <= v)).
Proof. lia. Qed.

Lemma hydraS1_obligation23_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x625 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x626 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x627 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x628 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x629 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x630 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x631 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x632 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x633 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> True -> (((v = sourceValue) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation24: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (v : Z), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x634 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x635 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x636 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x637 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x638 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x639 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x640 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x641 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x642 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x643 => ((x643 = 0%F) \/ (x643 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> True -> ((v = 252%nat) -> (0%nat <= v)).
Proof. lia. Qed.

Lemma hydraS1_obligation25_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x644 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x645 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x646 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x647 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x648 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x649 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x650 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x651 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x652 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x653 => ((x653 = 0%F) \/ (x653 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> True -> (((v = claimedValue) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation26: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (v : Z), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x654 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x655 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x656 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x657 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x658 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x659 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x660 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x661 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x662 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x663 => ((x663 = 0%F) \/ (x663 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x664 => ((x664 = 0%F) \/ (x664 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> True -> ((v = 252%nat) -> ((0%nat <= v) /\ (v <= (C.k - 1%nat)%Z))).
Proof.
  intuit; subst; auto; lia.
Qed.

Lemma hydraS1_obligation27: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x665 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x666 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x667 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x668 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x669 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x670 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x671 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x672 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x673 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x674 => ((x674 = 0%F) \/ (x674 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x675 => ((x675 = 0%F) \/ (x675 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> True -> (((v = claimedValue) /\ True) -> ((^ v) < (2%nat ^ 252%nat)%Z)).
Proof.
  intuit; subst; auto; lia.
Qed.

Lemma hydraS1_obligation28: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x676 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x677 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x678 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x679 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x680 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x681 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x682 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x683 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x684 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x685 => ((x685 = 0%F) \/ (x685 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x686 => ((x686 = 0%F) \/ (x686 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> True -> (((v = sourceValue) /\ True) -> (((^ v) + 1%nat)%Z < (2%nat ^ 252%nat)%Z)).
Proof.
  intuit; subst; auto; lia.
Qed.

Lemma hydraS1_obligation29_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x687 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x688 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x689 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x690 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x691 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x692 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x693 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x694 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x695 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x696 => ((x696 = 0%F) \/ (x696 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x697 => ((x697 = 0%F) \/ (x697 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> True -> (((v = isStrict) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation30_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x698 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x699 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x700 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x701 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x702 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x703 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x704 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x705 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x706 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x707 => ((x707 = 0%F) \/ (x707 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x708 => ((x708 = 0%F) \/ (x708 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> True -> ((v = 1%F) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation31_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x709 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x710 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x711 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x712 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x713 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x714 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x715 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x716 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x717 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x718 => ((x718 = 0%F) \/ (x718 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x719 => ((x719 = 0%F) \/ (x719 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> True -> ((v = (isStrict - 1%F)%F) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation32_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x720 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x721 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x722 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x723 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x724 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x725 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x726 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x727 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x728 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x729 => ((x729 = 0%F) \/ (x729 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x730 => ((x730 = 0%F) \/ (x730 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> True -> (((v = isStrict) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation33_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x731 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x732 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x733 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x734 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x735 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x736 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x737 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x738 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x739 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x740 => ((x740 = 0%F) \/ (x740 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x741 => ((x741 = 0%F) \/ (x741 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> True -> (((v = sourceValue) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation34_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x742 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x743 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x744 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x745 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x746 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x747 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x748 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x749 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x750 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x751 => ((x751 = 0%F) \/ (x751 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x752 => ((x752 = 0%F) \/ (x752 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> True -> (((v = claimedValue) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation35_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x753 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x754 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x755 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x756 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x757 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x758 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x759 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x760 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x761 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x762 => ((x762 = 0%F) \/ (x762 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x763 => ((x763 = 0%F) \/ (x763 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> True -> (((v = sourceValue) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation36_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x764 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x765 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x766 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x767 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x768 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x769 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x770 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x771 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x772 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x773 => ((x773 = 0%F) \/ (x773 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x774 => ((x774 = 0%F) \/ (x774 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> True -> ((v = (claimedValue - sourceValue)%F) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation37_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x775 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x776 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x777 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x778 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x779 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x780 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x781 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x782 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x783 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x784 => ((x784 = 0%F) \/ (x784 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x785 => ((x785 = 0%F) \/ (x785 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> True -> (((v = isStrict) /\ True) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation38_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (v : F), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x786 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x787 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x788 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x789 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x790 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x791 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x792 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x793 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x794 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x795 => ((x795 = 0%F) \/ (x795 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x796 => ((x796 = 0%F) \/ (x796 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> True -> ((v = ((claimedValue - sourceValue)%F * isStrict)%F) -> True).
Proof. intuit. Qed.

Lemma hydraS1_obligation39: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (u6 : unit) (a : (list F)) (v : Z), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x797 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x798 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x799 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x800 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x801 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x802 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x803 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x804 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x805 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x806 => ((x806 = 0%F) \/ (x806 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x807 => ((x807 = 0%F) \/ (x807 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> (sourceValue = (sourceValue + ((claimedValue - sourceValue)%F * isStrict)%F)%F) -> Forall (fun x808 => True) a -> (((True /\ ((a!0%nat) = sourceSecret)) /\ ((a!1%nat) = 1%F)) /\ ((length a) = 2%nat)) -> True -> ((v = 2%nat) -> (0%nat <= v)).
Proof. lia. Qed.

Lemma hydraS1_obligation40: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (u6 : unit) (a : (list F)) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x809 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x810 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x811 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x812 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x813 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x814 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x815 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x816 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x817 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x818 => ((x818 = 0%F) \/ (x818 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x819 => ((x819 = 0%F) \/ (x819 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> (sourceValue = (sourceValue + ((claimedValue - sourceValue)%F * isStrict)%F)%F) -> Forall (fun x820 => True) a -> (((True /\ ((a!0%nat) = sourceSecret)) /\ ((a!1%nat) = 1%F)) /\ ((length a) = 2%nat)) -> Forall (fun x821 => True) v -> True -> (((v = a) /\ True) -> ((length v) = 2%nat)).
Proof.
  intuit; subst; lia.
Qed.

Lemma hydraS1_obligation41: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (u6 : unit) (a : (list F)) (sourceSecretHash : F) (b : (list F)) (v : Z), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x822 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x823 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x824 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x825 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x826 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x827 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x828 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x829 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x830 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x831 => ((x831 = 0%F) \/ (x831 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x832 => ((x832 = 0%F) \/ (x832 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> (sourceValue = (sourceValue + ((claimedValue - sourceValue)%F * isStrict)%F)%F) -> Forall (fun x833 => True) a -> (((True /\ ((a!0%nat) = sourceSecret)) /\ ((a!1%nat) = 1%F)) /\ ((length a) = 2%nat)) -> (sourceSecretHash = (Poseidon 2%nat a)) -> Forall (fun x834 => True) b -> (((True /\ ((b!0%nat) = sourceSecretHash)) /\ ((b!1%nat) = externalNullifier)) /\ ((length b) = 2%nat)) -> True -> ((v = 2%nat) -> (0%nat <= v)).
Proof. lia. Qed.

Lemma hydraS1_obligation42: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (u6 : unit) (a : (list F)) (sourceSecretHash : F) (b : (list F)) (v : (list F)), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x835 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x836 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x837 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x838 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x839 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x840 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x841 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x842 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x843 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x844 => ((x844 = 0%F) \/ (x844 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x845 => ((x845 = 0%F) \/ (x845 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> (sourceValue = (sourceValue + ((claimedValue - sourceValue)%F * isStrict)%F)%F) -> Forall (fun x846 => True) a -> (((True /\ ((a!0%nat) = sourceSecret)) /\ ((a!1%nat) = 1%F)) /\ ((length a) = 2%nat)) -> (sourceSecretHash = (Poseidon 2%nat a)) -> Forall (fun x847 => True) b -> (((True /\ ((b!0%nat) = sourceSecretHash)) /\ ((b!1%nat) = externalNullifier)) /\ ((length b) = 2%nat)) -> Forall (fun x848 => True) v -> True -> (((v = b) /\ True) -> ((length v) = 2%nat)).
Proof.
  intuit; subst; lia.
Qed.

Lemma hydraS1_obligation43_trivial: forall (registryTreeHeight : Z) (accountsTreeHeight : Z) (sourceIdentifier : F) (sourceSecret : F) (sourceCommitmentReceipt : (list F)) (destinationSecret : F) (destinationCommitmentReceipt : (list F)) (accountMerklePathElements : (list F)) (accountMerklePathIndices : (list F)) (accountsTreeRoot : F) (registryMerklePathElements : (list F)) (registryMerklePathIndices : (list F)) (sourceValue : F) (destinationIdentifier : F) (chainId : F) (commitmentMapperPubKey : (list F)) (registryTreeRoot : F) (externalNullifier : F) (nullifier : F) (claimedValue : F) (accountsTreeValue : F) (isStrict : F) (u0 : unit) (u1 : unit) (x : (list F)) (accountLeafConstructor : F) (u2 : unit) (y : (list F)) (registryLeafConstructor : F) (u3 : unit) (_x : (list F)) (_y : (list F)) (z : F) (u4 : unit) (u5 : unit) (u6 : unit) (a : (list F)) (sourceSecretHash : F) (b : (list F)) (c : F) (u7 : unit), ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < registryTreeHeight)) -> ((252%nat <= (C.k - 1%nat)%Z) /\ (0%nat < accountsTreeHeight)) -> True -> True -> Forall (fun x849 => True) sourceCommitmentReceipt -> ((length sourceCommitmentReceipt) = 3%nat) -> True -> Forall (fun x850 => True) destinationCommitmentReceipt -> ((length destinationCommitmentReceipt) = 3%nat) -> Forall (fun x851 => True) accountMerklePathElements -> (Z.of_nat (length accountMerklePathElements) = accountsTreeHeight) -> Forall (fun x852 => True) accountMerklePathIndices -> (Z.of_nat (length accountMerklePathIndices) = accountsTreeHeight) -> True -> Forall (fun x853 => True) registryMerklePathElements -> (Z.of_nat (length registryMerklePathElements) = registryTreeHeight) -> Forall (fun x854 => True) registryMerklePathIndices -> (Z.of_nat (length registryMerklePathIndices) = registryTreeHeight) -> (((^ sourceValue) + 1%nat)%Z < (2%nat ^ 252%nat)%Z) -> True -> True -> Forall (fun x855 => True) commitmentMapperPubKey -> ((length commitmentMapperPubKey) = 2%nat) -> True -> True -> True -> ((^ claimedValue) < (2%nat ^ 252%nat)%Z) -> True -> True -> True -> True -> Forall (fun x856 => True) x -> (((True /\ ((x!0%nat) = sourceIdentifier)) /\ ((x!1%nat) = sourceValue)) /\ ((length x) = 2%nat)) -> (accountLeafConstructor = (Poseidon 2%nat x)) -> True -> Forall (fun x857 => True) y -> (((True /\ ((y!0%nat) = accountsTreeRoot)) /\ ((y!1%nat) = accountsTreeValue)) /\ ((length y) = 2%nat)) -> (registryLeafConstructor = (Poseidon 2%nat y)) -> True -> Forall (fun x858 => ((x858 = 0%F) \/ (x858 = 1%F))) _x -> (((as_le_f _x) = sourceValue) /\ ((length _x) = 252%nat)) -> Forall (fun x859 => ((x859 = 0%F) \/ (x859 = 1%F))) _y -> (((as_le_f _y) = claimedValue) /\ ((length _y) = 252%nat)) -> (((z = 0%F) \/ (z = 1%F)) /\ (((z = 1%F) -> ((^ claimedValue) <= (^ sourceValue))) /\ ((z = 0%F) -> ~((^ claimedValue) <= (^ sourceValue))))) -> (z = 1%F) -> (((isStrict - 1%F)%F * isStrict)%F = 0%F) -> (sourceValue = (sourceValue + ((claimedValue - sourceValue)%F * isStrict)%F)%F) -> Forall (fun x860 => True) a -> (((True /\ ((a!0%nat) = sourceSecret)) /\ ((a!1%nat) = 1%F)) /\ ((length a) = 2%nat)) -> (sourceSecretHash = (Poseidon 2%nat a)) -> Forall (fun x861 => True) b -> (((True /\ ((b!0%nat) = sourceSecretHash)) /\ ((b!1%nat) = externalNullifier)) /\ ((length b) = 2%nat)) -> (c = (Poseidon 2%nat b)) -> (c = nullifier) -> (True -> True).
Proof. intuit. Qed.
